openapi: 3.0.0

info:
  title: Order Service
  description: Service to handle orders
  version: 1.0.0

servers: 
  - url: 'http://localhost:8002/'

paths:
  /order:
    post:
      tags: 
        - order
      summary: Place Order
      requestBody:
        required: true
        description: New Order Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        "201":
          description: Order placed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        "400":
          description: Bad Request

  /order/{userId}:  
    get:
      tags: 
        - order
      summary: Get all orders of a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Order for the requested userId
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/OrderResponse'
        400:
          description: Invalid user id supplied
        404:
          description:  No orders found for the user id provided
  
  /order/{orderId}:
    get:
      tags:
        - order
      summary: Get a product by product id
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Order successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        400:
          description: Invalid order id supplied
        404:
          description: Order not found

components:
  schemas:
    OrderRequest:
      type: object
      required: 
        - shippingAddress
        - paymentType
        - orderItems
      properties:
        shippingAddress:
          type: string
          minLength: 1
          maxLength: 255
        paymentType:
          type: string
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemExternal'

    OrderResponse:
      type: object
      required: 
        - id
        - userId
        - date
        - totalCost
        - shippingAddress
        - paymentType
        - status
        - orderItems
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: string
          minLength: 1
          maxLength: 50
        date:
          type: string
          format: date-time
        totalCost:
          type: number
          format: double
        shippingAddress:
          type: string
          minLength: 1
          maxLength: 255
        paymentType:
          type: string
          enum:
            - CASH
            - CARD
        status:
          type: string
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemExternal'

    OrderItemExternal:
      type: object
      required:
        - productId
        - quantity
        - unitPrice
      properties:
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        unitPrice:
          type: number
          format: double