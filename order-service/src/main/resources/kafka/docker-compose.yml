---
version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_BROKER_ID: 1
      KAFKA_USE_LATEST_VERSION: true

  schema-registry:
    image: bitnami/schema-registry
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
#      - "8082:8082"
    depends_on:
      - kafka
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKA_BROKERS: PLAINTEXT://kafka:9093
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#      ,http://0.0.0.0:8082
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: zookeeper:2181
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: INSIDE://kafka:9093
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    hostname: kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      SERVER_SERVLET_CONTEXTPATH: /
      KAFKA_BROKERCONNECT: kafka:9093
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
      MESSAGE_FORMAT: AVRO

  kafka-setup:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9093 1 100 && \
                       kafka-topics --create --if-not-exists --bootstrap-server kafka:9093 --partitions 3 --replication-factor 1 --topic topic.ecommerce.request.order'"

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'