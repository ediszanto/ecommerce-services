openapi: 3.0.0

info:
  title: Product Service
  description: Service to handle products
  version: 1.0.0

servers: 
  - url: 'http://localhost:8000'

paths:
  /product:
    post:
      tags:
        - product
      operationId: addProduct
      summary: Add a new Product
      requestBody:
        required: true
        description: New Product Object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        201:
          description: Product added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400:
          description: Bad Request
        303:
          description: Product already exists
    
    get:
      tags:
        - product
      operationId: getProducts
      summary: Get All products
      responses:
        200:
          description: All Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
        400:
          description: Bad Request
  
  /product/{productId}:  
    get:
      tags:
        - product
      operationId: getProduct
      summary: Get a product by id
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Product found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400:
          description: Invalid id
        404:
          description: Product not found
          
    put:
      tags:
        - product
      operationId: updateProduct
      summary: Update product by id
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Product to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        200:
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        400: 
          description: Invalid id
        404: 
          description: Product Not Found
    
    delete:
      tags:
        - product
      operationId: deleteProduct
      summary: Delete product by product productId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Product deleted successfully
        400: 
          description: Invalid id
        404: 
          description: Product Not Found
  
  /product/decreaseQuantity:
    patch:
      tags:
          - product
      operationId: decreaseProductQuantity
      summary: Decrease product decreaseQuantity
      requestBody:
          required: true
          description: Product to be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecreaseProductQuantityRequest'
      responses:
          200:
            description: Product quantity decreased successfully
          400: 
            description: Bad Request
          404: 
            description: Product Not Found
  
  /category:
    post:
      tags:
        - category
      operationId: addProductCategory
      summary: Add new category
      requestBody:
        required: true
        description: ProductCategoryRequest Object
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ProductCategoryRequest'
      responses:
        200:
          description: Category created successfully
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ProductCategoryResponse'
        400:
          description: Bad Request

  /category/{categoryId}:
    get:
      tags:
        - category
      operationId: getProductCategory
      summary: Get category by id
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Requested category
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductCategoryResponse'
        400:
          description: Bad Request
    
    delete:
      tags:
        - category
      operationId: deleteProductCategory
      summary: Get category by id
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Product category deleted successfully
        400:
          description: Bad Request
            

components:
  schemas:
    ProductRequest:
      type: object
      required: 
        - name
        - quantity
        - price
        - categoryId
      properties:
        name:
          type: string
        quantity:
          type: integer
          format: int64
        price:
          type: number
          format: double
        categoryId:
          type: integer
          format: int32

    ProductResponse:
      type: object
      required:
        - id
        - name
        - quantity
        - price
        - categoryId
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        quantity:
          type: integer
          format: int64
        price:
          type: number
          format: double
        categoryId:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/ProductCategoryResponse'

    ProductCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50

    ProductCategoryResponse:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
          maxLength: 50
    
    DecreaseProductQuantityRequest: 
      type: object
      required: 
        - productId
        - productNumber
      properties:
        productId:
          type: integer
          format: int64
        productNumber:
          type: integer
          format: int64